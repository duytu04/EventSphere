name: Deploy EventSphere Monorepo to Azure

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_NAME: eventsphere-backend
  NODE_VERSION: '18.x'
  JAVA_VERSION: '23'
  DOCKER_REGISTRY: eventsphereacr.azurecr.io

jobs:
  # Detect changes in monorepo
  changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      backend: ${{ steps.changes.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

  # Deploy Frontend to Azure Static Web Apps
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.frontend == 'true' || github.event_name == 'push'
    
    steps:
    - name: 'Checkout Monorepo'
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "/frontend"
        output_location: "dist"
        skip_app_build: true

  # Deploy Backend to Azure App Service
  deploy-backend:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true' || github.event_name == 'push'
    
    steps:
    - name: 'Checkout Monorepo'
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}

    - name: Build Backend
      working-directory: ./backend
      run: |
        ./mvnw clean package -DskipTests

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.DOCKER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and Push Docker Image
      working-directory: ./backend
      run: |
        docker build -t ${{ env.DOCKER_REGISTRY }}/eventsphere-backend:${{ github.sha }} .
        docker push ${{ env.DOCKER_REGISTRY }}/eventsphere-backend:${{ github.sha }}

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: ${{ env.DOCKER_REGISTRY }}/eventsphere-backend:${{ github.sha }}

  # Deploy Infrastructure (only on main branch)
  deploy-infrastructure:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 'Checkout Monorepo'
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Infrastructure
      run: |
        az deployment group create \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --template-file azure-deploy.bicep \
          --parameters \
            environmentName=prod \
            appNamePrefix=eventsphere \
            repositoryUrl=${{ github.server_url }}/${{ github.repository }} \
            branchName=main \
            mysqlAdminPassword=${{ secrets.MYSQL_ADMIN_PASSWORD }} \
            jwtSecret=${{ secrets.JWT_SECRET }}
