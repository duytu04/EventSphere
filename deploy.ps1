# EventSphere Deploy Script for Windows PowerShell
# Ch·∫°y script n√†y ƒë·ªÉ chu·∫©n b·ªã deploy l√™n Render

Write-Host "üöÄ EventSphere Deploy Preparation Script" -ForegroundColor Green
Write-Host "=========================================" -ForegroundColor Green
Write-Host ""

# Ki·ªÉm tra Git repository
Write-Host "üìã Checking Git repository..." -ForegroundColor Yellow
if (Test-Path ".git") {
    Write-Host "‚úÖ Git repository found" -ForegroundColor Green
} else {
    Write-Host "‚ùå Git repository not found. Please initialize Git first." -ForegroundColor Red
    exit 1
}

# Ki·ªÉm tra file render.yaml
Write-Host "üìã Checking render.yaml..." -ForegroundColor Yellow
if (Test-Path "render.yaml") {
    Write-Host "‚úÖ render.yaml found" -ForegroundColor Green
} else {
    Write-Host "‚ùå render.yaml not found. Please create it first." -ForegroundColor Red
    exit 1
}

# Ki·ªÉm tra file .env
Write-Host "üìã Checking .env file..." -ForegroundColor Yellow
if (Test-Path ".env") {
    Write-Host "‚úÖ .env file found" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  .env file not found. Creating from .env.example..." -ForegroundColor Yellow
    if (Test-Path ".env.example") {
        Copy-Item ".env.example" ".env"
        Write-Host "‚úÖ .env file created from .env.example" -ForegroundColor Green
        Write-Host "‚ö†Ô∏è  Please edit .env file with your actual values before deploying!" -ForegroundColor Yellow
    } else {
        Write-Host "‚ùå .env.example not found. Please create it first." -ForegroundColor Red
        exit 1
    }
}

# Ki·ªÉm tra .gitignore
Write-Host "üìã Checking .gitignore..." -ForegroundColor Yellow
if (Test-Path ".gitignore") {
    $gitignoreContent = Get-Content ".gitignore" -Raw
    if ($gitignoreContent -match "\.env") {
        Write-Host "‚úÖ .env is in .gitignore" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Adding .env to .gitignore..." -ForegroundColor Yellow
        Add-Content ".gitignore" "`n# Environment variables`n.env`n"
        Write-Host "‚úÖ .env added to .gitignore" -ForegroundColor Green
    }
} else {
    Write-Host "‚ö†Ô∏è  Creating .gitignore..." -ForegroundColor Yellow
    @"
# Environment variables
.env

# Dependencies
node_modules/
target/

# IDE
.vscode/
.idea/

# OS
.DS_Store
Thumbs.db
"@ | Out-File -FilePath ".gitignore" -Encoding UTF8
    Write-Host "‚úÖ .gitignore created" -ForegroundColor Green
}

# Ki·ªÉm tra Git status
Write-Host "üìã Checking Git status..." -ForegroundColor Yellow
$gitStatus = git status --porcelain
if ($gitStatus) {
    Write-Host "‚ö†Ô∏è  Uncommitted changes found:" -ForegroundColor Yellow
    Write-Host $gitStatus -ForegroundColor Gray
    Write-Host ""
    $commit = Read-Host "Do you want to commit these changes? (y/n)"
    if ($commit -eq "y" -or $commit -eq "Y") {
        $commitMessage = Read-Host "Enter commit message (or press Enter for default)"
        if ([string]::IsNullOrWhiteSpace($commitMessage)) {
            $commitMessage = "Prepare for Render deployment"
        }
        git add .
        git commit -m $commitMessage
        Write-Host "‚úÖ Changes committed" -ForegroundColor Green
    }
} else {
    Write-Host "‚úÖ No uncommitted changes" -ForegroundColor Green
}

# Ki·ªÉm tra remote repository
Write-Host "üìã Checking remote repository..." -ForegroundColor Yellow
$remoteUrl = git remote get-url origin 2>$null
if ($remoteUrl) {
    Write-Host "‚úÖ Remote repository: $remoteUrl" -ForegroundColor Green
} else {
    Write-Host "‚ùå No remote repository found. Please add GitHub remote first." -ForegroundColor Red
    Write-Host "Run: git remote add origin https://github.com/yourusername/EventSphere.git" -ForegroundColor Yellow
    exit 1
}

# Push to GitHub
Write-Host "üìã Pushing to GitHub..." -ForegroundColor Yellow
$push = Read-Host "Do you want to push to GitHub now? (y/n)"
if ($push -eq "y" -or $push -eq "Y") {
    git push origin main
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Code pushed to GitHub" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Failed to push to GitHub" -ForegroundColor Red
        exit 1
    }
}

Write-Host ""
Write-Host "üéâ Preparation completed!" -ForegroundColor Green
Write-Host "=========================" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Next steps:" -ForegroundColor Cyan
Write-Host "1. Go to https://render.com" -ForegroundColor White
Write-Host "2. Sign up/Login with GitHub" -ForegroundColor White
Write-Host "3. Click 'New +' ‚Üí 'Blueprint'" -ForegroundColor White
Write-Host "4. Select your EventSphere repository" -ForegroundColor White
Write-Host "5. Click 'Apply' to create services" -ForegroundColor White
Write-Host "6. Configure environment variables in Render Dashboard" -ForegroundColor White
Write-Host "7. Deploy and test!" -ForegroundColor White
Write-Host ""
Write-Host "üìö For detailed instructions, see:" -ForegroundColor Cyan
Write-Host "   - DEPLOYMENT_STEP_BY_STEP.md" -ForegroundColor White
Write-Host "   - deploy-checklist.md" -ForegroundColor White
Write-Host ""
Write-Host "üöÄ Happy deploying!" -ForegroundColor Green
